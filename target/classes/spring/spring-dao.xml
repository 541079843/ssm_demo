<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 1. 加载数据库访问配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2. 数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 释放关闭链接, 不自动提交, 默认值: false-->
        <property name="autoCommitOnClose" value="false"/>
        <!-- checkoutTimeout 默认值为0, 一直尝试获取连接, 容易出现假死-->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 获取连接失败,尝试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!-- 3. 配置 sqlSessionFactory 对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置 mybatis 全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描 entity 包, mapper 中使用别名 com.ssm.seckill.entity.Seckill => Seckill -->
        <property name="typeAliasesPackage" value="com.ssm.seckill.entity"/>
        <!--<property name="typeAliasesPackage" value="com.ssm.seckill.entity1;com.ssm.seckill.entity2"/>-->
        <!-- 扫描 mapper sql 配置文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4. 扫描 Dao 接口包, 动态实现 Dao 接口, 并注入到 spring 容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入 sqlSessionFactory ,
            此处需要注意, 使用 sqlSessionFactoryBeanName , 懒加载 sqlSessionFactory
            用 value 而不是用 ref ,
            懒加载 目的是为了避免 实例化 MapperScannerConfigurer 时, 其他配置文件还没有加载完成,出现错误
            -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 扫描 Dao 接口包 -->
        <property name="basePackage" value="com.ssm.seckill.dao"/>
    </bean>
</beans>